#version 460

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

layout(binding = 0, r32f) uniform writeonly image2D out_image;
layout(binding = 1) uniform sampler2D in_tex;

layout(location = 0) uniform uvec2 image_size;
layout(location = 1) uniform float lod;

void main() {
	uvec2 pos = gl_GlobalInvocationID.xy;

	// Sampler is set up to do min reduction, so this computes the minimum depth of a 2x2 texel quad
	float depth = textureLod(in_tex, (vec2(pos) + vec2(0.5)) / image_size, lod).x;
	imageStore(out_image, ivec2(pos), vec4(depth));
}